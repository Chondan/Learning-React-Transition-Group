{"version":3,"sources":["App.js","index.js"],"names":["defaultStyles","transition","opacity","transitionStyles","entering","color","entered","exiting","exited","Fade","inProp","in","Transition","timeout","unmountOnExit","appear","state","style","Box","className","MovingBox","mountOnEnter","onEnter","alert","onExit","exit","enter","addEndListener","node","done","addEventListener","e","MovingBoxCSSTransition","useState","setInProp","CSSTransition","classNames","onEntering","console","log","classList","onEntered","onClick","PopupMessage","showMessage","setShowMessage","showButton","setShowButton","onExited","setTimeout","Warp","hide","setHide","Fragment","appearActive","appearDone","enterActive","enterDone","exitActive","exitDone","margin","SwitchTransitionExample1","setState","SwitchTransition","key","modes","SwitchTransitionExample2","mode","setMode","map","m","type","name","checked","value","onChange","target","TodoList","id","uuidv4","text","items","setItems","TransitionGroup","component","filter","item","todoItem","prompt","App","show","setShow","GoMove","setGoMove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.396d73f1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Transition, CSSTransition, SwitchTransition, TransitionGroup } from 'react-transition-group';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst duration = 300;\nconst defaultStyles = {\n    transition: `opacity ${duration}ms ease-in-out`,\n    opacity: 0,\n}\nconst transitionStyles = {\n    entering: { opacity: 0.5, color: \"blue\" },\n    entered: { opacity: 1, color: \"red\" },\n    exiting: { opacity: 0.5, color: \"black\" },\n    exited: { opacity: 0 },\n}\nconst Fade = ({ in: inProp }) => (\n    <Transition \n    in={inProp}\n    timeout={duration}\n    unmountOnExit={true}\n    appear={true}\n    >\n    {state => (\n        <div style={{...defaultStyles,...transitionStyles[state]}}>\n            I'm a fade Transition!\n        </div>\n    )}\n\n    </Transition>\n);\nfunction Box({ className }) {\n    return (\n        <div className={\"box \" + className}></div>\n    );\n}\nfunction MovingBox({ in:inProp }) {\n    return (\n        <Transition\n        in={inProp}\n        // timeout={300}\n        mountOnEnter={false}\n        unmountOnExit={false}\n        onEnter={() => alert(\"The box is going to move to the right\")}\n        onExit={() => alert(\"The box is going to move to the left\")}\n        exit={true}\n        enter={true}\n        addEndListener={(node, done) => {\n            node.addEventListener('transitionend', (e) => {\n                done(e);\n            }, false);\n        }}\n        >\n            {state => (\n                <Box className={`box-${state}`} />\n            )}\n        </Transition>\n    );\n}\nfunction MovingBoxCSSTransition() {\n    const [inProp, setInProp] = useState(false);\n    function handleClick(e) {\n        setInProp(!inProp);\n    }\n    return (\n        <div>\n            <CSSTransition\n            in={inProp}\n            timeout={2000}\n            classNames=\"msg\"\n            onEntering={(node) => console.log(node.classList)}\n            onEntered={() => console.log(\"entered\")}\n            >\n                <div className=\"msg\"></div>\n            </CSSTransition>\n            <button onClick={handleClick}>{inProp ? \"Left\" : \"Right\"}</button>\n        </div>\n\n    );\n}\nfunction PopupMessage() {\n    const [showMessage, setShowMessage] = useState(false);\n    const [showButton, setShowButton] = useState(true);\n    return (\n        <div className=\"popup-msg\">\n            {showButton && <button onClick={() => setShowMessage(!showMessage)}>Show Message</button>}\n            <CSSTransition\n            in={showMessage}\n            timeout={300}\n            classNames=\"message-container\"\n            onEnter={() => setShowButton(false)}\n            onExited={() => {\n                setTimeout(() => {\n                    setShowButton(true);\n                }, 200);\n            }}\n            >\n                <div className=\"message\">\n                    <p>Animated alert message</p>\n                    <p>This alert message is being transitioned in and out of the DOM.</p>\n                    <button onClick={() => setShowMessage(!showMessage)}>Close</button>\n                </div>\n            </CSSTransition>\n        </div>\n    );\n}\nfunction Warp() {\n    const [hide, setHide] = useState(false);\n    return (\n        <React.Fragment>\n            <CSSTransition\n            in={!hide}\n            timeout={200}\n            classNames={{\n                appear: 'warp',\n                appearActive: 'warp-active-appear',\n                appearDone: 'warp-done-appear',\n                enter: 'warp-enter',\n                enterActive: 'warp-active-enter',\n                enterDone: 'warp-done-enter',\n                exit: 'warp-exit',\n                exitActive: 'warp-active-exit',\n                exitDone: 'warp-done-exit',\n            }}\n            unmountOnExit\n            >\n                <div>warp</div>\n            </CSSTransition>\n            <button style={{ margin: \"2px\"}} onClick={() => setHide(!hide)}>{ hide ? \"Show\" : \"Hide\"}</button>\n        </React.Fragment>\n    );\n}\nfunction SwitchTransitionExample1() {\n    const [state, setState] = useState(false);\n    return (\n        <SwitchTransition>\n            <CSSTransition\n            key={state ? \"Goodbye, world!\" : \"Hello, world!\"}\n            addEndListener={(node, done) => node.addEventListener(\"transitionend\", done, false)}\n            classNames=\"fade\"\n            >\n                <button onClick={() => setState(state => !state)}>\n                    {state ? \"Goodbye, world!\" : \"Hello, world!\"}\n                </button>\n            </CSSTransition>\n        </SwitchTransition>\n    );\n}\nconst modes = [\"out-in\", \"in-out\"];\nfunction SwitchTransitionExample2() {\n    const [mode, setMode] = useState(\"out-in\");\n    const [state, setState] = useState(true);\n    return (\n        <div className=\"mode-example\">\n            <div className=\"label\">Mode: </div>\n            <div className=\"modes\">\n                <form>\n                    {modes.map(m => {\n                        return (\n                            <React.Fragment key={m}>\n                            <input type=\"radio\" name=\"mode\" checked={m === mode} value={m} onChange={e => setMode(e.target.value)} />\n                            <label>{m}</label>\n                            </React.Fragment>\n                        );\n                    })}\n                </form>\n            </div>\n            <div className=\"main\">\n                    <SwitchTransition mode={mode}>\n                        <CSSTransition\n                        key={state}\n                        addEndListener={(node, done) => node.addEventListener(\"transitionend\", done ,false)}\n                        classNames=\"example-btn\"\n                        >\n                            <button onClick={() => setState(state => !state)}>{state ? \"Hello, world!\" : \"Goodbye, world!\"}</button>\n                        </CSSTransition>\n                    </SwitchTransition>\n            </div>\n            \n        </div>\n    );\n}\nfunction TodoList() {\n    const [items, setItems] = useState([\n        { id: uuidv4(), text: \"Buy eggs\" },\n        { id: uuidv4(), text: \"Pay bills\" },\n        { id: uuidv4(), text: \"Invite friends over\" },\n        { id: uuidv4(), text: \"Fix the TV\" },\n    ]);\n    function addItemHandler(e) {\n        const todoItem = prompt(\"Enter your task\", \"...task\");\n        if (!todoItem) {\n            return;\n        }\n        setItems([...items, { id: uuidv4(), text: todoItem }]);\n    }\n    return (\n        <div className=\"todo-list-container\">\n            <ul className=\"todo-list\">\n                <TransitionGroup component={null}>\n                    {items.map(({ id, text }) => (\n                        <CSSTransition \n                        key={id}\n                        timeout={500}\n                        classNames=\"item\"\n                        >\n                            <li className=\"item\">\n                                <button onClick={() => setItems(items.filter(item => item.id !== id))}>X</button>\n                                <span>{text}</span>\n                            </li>\n                        </CSSTransition>\n                    ))}\n                </TransitionGroup>\n            </ul>\n            <button onClick={addItemHandler}>Add Item</button>\n        </div>\n    );\n    \n    \n}\n\nfunction App() {\n    const [show, setShow] = useState(true);\n    const [GoMove, setGoMove] = useState(false);\n    return (\n        <div>\n            <h1>Transition</h1>\n            <Fade in={show} />\n            <button onClick={() => setShow(!show)}>{show ? \"Hide\" : \"Show\"}</button>\n            <MovingBox in={GoMove} />\n            <button onClick={() => setGoMove(!GoMove)}>{GoMove ? \"Left\" : \"Right\"}</button>\n            <h1>CSSTransition</h1>\n            <Warp />\n            <MovingBoxCSSTransition />\n            <PopupMessage />\n            <h1>SwitchTransition</h1>\n            <SwitchTransitionExample1 />\n            <SwitchTransitionExample2 />\n            <h1>TransitionGroup</h1>\n            <TodoList />\n        </div>\n    );\n    \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}